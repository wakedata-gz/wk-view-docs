import{_ as s,o as a,c as n,O as l}from"./chunks/framework.a4466d04.js";const C=JSON.parse('{"title":"配置","description":"","frontmatter":{},"headers":[],"relativePath":"using/init.md","filePath":"using/init.md","lastUpdated":1691746957000}'),t={name:"using/init.md"},o=l(`<h1 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h1><p>为了更方便的使用 Toast 等功能，<code>wk-view</code> 挂载了一个对象到 <code>uni</code> 上，我们可以在项目中任意位置通过 <code>uni.$wkv</code> 访问该变量。</p><p>使用 <code>uni.$wkv</code> 前，必须初始化 <code>wk-view</code>，推荐在项目入口 <code>main.js</code> 中初始化。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// import { initWkView } from &#39;./uni_modules/wk-view&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">initWkView</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">wk-view</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">initWkView</span><span style="color:#A6ACCD;">()</span></span></code></pre></div><h2 id="initwkview-函数声明" tabindex="-1">initWkView 函数声明 <a class="header-anchor" href="#initwkview-函数声明" aria-label="Permalink to &quot;initWkView 函数声明&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 初始化组件库</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;"> WkView.Config </span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#676E95;font-style:italic;"> 组件库配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initWkView</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WkView</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Config</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span></code></pre></div>`,6),e=[o];function p(i,c,r,y,d,F){return a(),n("div",null,e)}const f=s(t,[["render",p]]);export{C as __pageData,f as default};
